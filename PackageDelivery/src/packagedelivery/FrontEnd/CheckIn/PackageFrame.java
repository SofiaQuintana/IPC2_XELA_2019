/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packagedelivery.FrontEnd.CheckIn;
import java.sql.Connection;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import packagedelivery.DummyClasses.Package;

import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import packagedelivery.DBmanagers.BillDBManager;
import packagedelivery.DBmanagers.ClientDBManager;
import packagedelivery.DBmanagers.DBManager;
import packagedelivery.DBmanagers.DestinationDBManager;
import packagedelivery.DBmanagers.PackageDBManager;
import packagedelivery.DBmanagers.StorageDBManager;
import packagedelivery.DummyClasses.Bill;
import packagedelivery.DummyClasses.Client;
import packagedelivery.DummyClasses.Destination;
import packagedelivery.DummyClasses.Rate;

/**
 *
 * @author zofia
 */
public class PackageFrame extends javax.swing.JInternalFrame {
    private List<Package> packages;
    private List<Package> queuePackages;
    private List<Destination> destinations;
    private List<Rate> rates;
    private Rate rate;
    private double globalFare;
    private double priorizationFare;
    private double weightFare;
    private String idBill;
    private ObservableList<Package> observablePackages;
    private DestinationDBManager destinationManager;
    private BillDBManager billManager;
    private ClientDBManager clientManager;
    private PackageDBManager packageManager;
    private StorageDBManager storage;
    private ClientNitDialog clientDialog;
    private DBManager manager;
    private BillDialog bill;
    private Connection connection;
    private static final String DESTINATION_QUERY = "SELECT * FROM Destination;";
    private static final String RATE_QUERY = "SELECT * FROM Rate;";
    private static final String GENERAL_QUERY = "SELECT * FROM Package;";
    private static final String SELECTION_QUERY = "SELECT * FROM Package WHERE ";
    private static final String RATE_DEFAULT = "UNICO";
    /**
     * Creates new form PackageFrame
     */
    public PackageFrame(Connection connection) {
        destinations = new ArrayList<>();
        packages = new ArrayList<>();
        queuePackages = new ArrayList<>();
        observablePackages = ObservableCollections.observableList(packages);
        initComponents();
        this.connection = connection;
        destinationManager = new DestinationDBManager(connection);
        packageManager = new PackageDBManager(connection);
        manager = new DBManager(connection);
        billManager = new BillDBManager(connection);
        clientManager = new ClientDBManager(connection);
        storage = new StorageDBManager(connection);
        setComboModel();
        refreshObservableList(packageManager.getElements(GENERAL_QUERY));
        getRate();
        generateIdBill();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        searchingText = new javax.swing.JLabel();
        searchingButton = new javax.swing.JButton();
        createUserPanel = new javax.swing.JTabbedPane();
        addPackagePanel = new javax.swing.JPanel();
        creatStuffPanel = new javax.swing.JPanel();
        priorizationLabel = new javax.swing.JLabel();
        destinationComboBox = new javax.swing.JComboBox<>();
        dateLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        facturarButton = new javax.swing.JButton();
        destinationLabel = new javax.swing.JLabel();
        priorizationField = new javax.swing.JCheckBox();
        weightSpinner = new javax.swing.JSpinner();
        dateField = new javax.swing.JFormattedTextField();
        formatLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        retiroButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchingField = new javax.swing.JTextField();
        searchingComboBox = new javax.swing.JComboBox<>();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        searchingText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 16)); // NOI18N
        searchingText.setForeground(new java.awt.Color(153, 0, 51));
        searchingText.setText("Busqueda Personalizada--------------------------------------------------------------------");

        searchingButton.setBackground(new java.awt.Color(153, 0, 51));
        searchingButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        searchingButton.setForeground(new java.awt.Color(204, 204, 204));
        searchingButton.setText("Buscar");
        searchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchingButtonActionPerformed(evt);
            }
        });

        createUserPanel.setBackground(new java.awt.Color(255, 153, 153));

        creatStuffPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        priorizationLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        priorizationLabel.setForeground(new java.awt.Color(153, 0, 51));
        priorizationLabel.setText("Priorizacion:");

        destinationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------VACIO------", "Administrador", "Operador", "Recepcionista" }));

        dateLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(153, 0, 51));
        dateLabel.setText("Fecha de ingreso:");

        weightLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        weightLabel.setForeground(new java.awt.Color(153, 0, 51));
        weightLabel.setText("Peso:");

        facturarButton.setBackground(new java.awt.Color(153, 0, 51));
        facturarButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        facturarButton.setForeground(new java.awt.Color(204, 204, 204));
        facturarButton.setText("Facturar");
        facturarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturarButtonActionPerformed(evt);
            }
        });

        destinationLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        destinationLabel.setForeground(new java.awt.Color(153, 0, 51));
        destinationLabel.setText("Destino:");

        priorizationField.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        priorizationField.setText("Seleccione para priorizar paquete");

        weightSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 1000.0d, 0.5d));

        dateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        formatLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        formatLabel.setText("Ej. 2018-02-25");

        addButton.setBackground(new java.awt.Color(153, 0, 51));
        addButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(204, 204, 204));
        addButton.setText("Agregar");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creatStuffPanelLayout = new javax.swing.GroupLayout(creatStuffPanel);
        creatStuffPanel.setLayout(creatStuffPanelLayout);
        creatStuffPanelLayout.setHorizontalGroup(
            creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLabel)
                    .addComponent(weightLabel)
                    .addComponent(destinationLabel)
                    .addComponent(priorizationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formatLabel)
                    .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(creatStuffPanelLayout.createSequentialGroup()
                            .addComponent(addButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(facturarButton))
                        .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(destinationComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priorizationField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(weightSpinner)
                            .addComponent(dateField))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        creatStuffPanelLayout.setVerticalGroup(
            creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationLabel)
                    .addComponent(destinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorizationLabel)
                    .addComponent(priorizationField))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightLabel)
                    .addComponent(weightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formatLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturarButton)
                    .addComponent(addButton))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout addPackagePanelLayout = new javax.swing.GroupLayout(addPackagePanel);
        addPackagePanel.setLayout(addPackagePanelLayout);
        addPackagePanelLayout.setHorizontalGroup(
            addPackagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPackagePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(creatStuffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        addPackagePanelLayout.setVerticalGroup(
            addPackagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPackagePanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(creatStuffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );

        createUserPanel.addTab("Ingresar Paquete", addPackagePanel);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${observablePackages}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, table);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${packageId}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientNit}"));
        columnBinding.setColumnName("Nit");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${billId}"));
        columnBinding.setColumnName("Factura");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${destinationId}"));
        columnBinding.setColumnName("Destino");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${weight}"));
        columnBinding.setColumnName("Peso");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${priorized}"));
        columnBinding.setColumnName("Priorizado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${price}"));
        columnBinding.setColumnName("Precio");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(table);

        retiroButton.setBackground(new java.awt.Color(153, 0, 51));
        retiroButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        retiroButton.setForeground(new java.awt.Color(204, 204, 204));
        retiroButton.setText("Registrar retiro de paquete");
        retiroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retiroButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Seleccione una fila -----------------------------------------");

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(retiroButton)))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retiroButton)
                    .addComponent(jLabel2))
                .addGap(0, 41, Short.MAX_VALUE))
        );

        createUserPanel.addTab("Paquetes", tablePanel);

        searchingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----VACIO-----", "IdPackage", "Client_Nit", "Destination_Id", "Bill_id", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchingField, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(createUserPanel))
                        .addComponent(searchingText))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchingButton)
                    .addComponent(searchingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(633, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(searchingText)
                    .addGap(63, 63, 63)
                    .addComponent(createUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchingButtonActionPerformed
        // TODO add your handling code here:
        if(searchingField.getText().isEmpty()) {
            refreshObservableList(packageManager.getElements(GENERAL_QUERY));
        } else if(!searchingField.getText().isEmpty() && searchingComboBox.getModel().equals("-----VACIO-----")) {
            JOptionPane.showMessageDialog(this, "Seleccione campo a buscar", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String query = SELECTION_QUERY + searchingComboBox.getModel().getSelectedItem().toString()
                    + "= '" + searchingField.getText() + "';";
            refreshObservableList(packageManager.getElements(query));
        }
        
    }//GEN-LAST:event_searchingButtonActionPerformed

    private void retiroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retiroButtonActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_retiroButtonActionPerformed

    private void facturarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturarButtonActionPerformed
        // TODO add your handling code here:
        if(queuePackages.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese paquetes...", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            LocalDate localDate = LocalDate.parse(dateField.getText());
            Date date = Date.valueOf(localDate);
            clientDialog = new ClientNitDialog(true, connection);
            this.clientDialog.setVisible(true);
            String nit = this.clientDialog.getData();
            facturarPackages(nit, date);
            Bill bills = billManager.getBillInList(this.idBill);
                        System.out.println(this.queuePackages.size());
            bill = new BillDialog(true, connection, queuePackages, bills);
            this.bill.setVisible(true);
        }
        generateIdBill();
        this.queuePackages.clear();
        this.dateField.setEnabled(true);
    }//GEN-LAST:event_facturarButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if(destinationComboBox.getModel().getSelectedItem().equals("------VACIO------") || 
                weightSpinner.getModel().equals(0) || dateField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese todos los campos...", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String packageId = packageManager.generateCode();
            LocalDate localDate = LocalDate.parse(dateField.getText());
            if(priorizationField.isSelected()) {
                double price = ((double) weightSpinner.getModel().getValue() * weightFare) + getDestinationFee() + priorizationFare;
                Package pckage = new Package(packageId, null, destinationComboBox.getModel().getSelectedItem().toString(), 
                        idBill, RATE_DEFAULT, (double) weightSpinner.getModel().getValue(), globalFare, priorizationFare, 
                        weightFare, price, true, true, localDate);
                queuePackages.add(pckage);
                JOptionPane.showMessageDialog(this, "Paquete agregado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                double price = ((double) weightSpinner.getModel().getValue() * weightFare) + getDestinationFee();
                Package pckage = new Package(packageId, null, destinationComboBox.getModel().getSelectedItem().toString(), 
                        idBill, RATE_DEFAULT, (double) weightSpinner.getModel().getValue(), globalFare, 0, 
                        weightFare, price, true, false, localDate);
                queuePackages.add(pckage);
                JOptionPane.showMessageDialog(this, "Paquete agregado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            }
        } this.dateField.setEnabled(false);
    }//GEN-LAST:event_addButtonActionPerformed

    public void facturarPackages(String nit, Date date) {
        Client client = clientManager.getClienInList(nit);
        Package packge;
        List<Package> temporal = this.queuePackages;
        String fullName = client.getName() + " " + client.getLastName();
        try {
            billManager.addBill(this.idBill, client.getNit(), fullName , client.getAddress(), date);
            for (int i = 0; i < temporal.size(); i++) {
                packge = temporal.get(i);
                packge.setClientNit(nit);
                packageManager.addPackage(packge.getPackageId(), nit, packge.getDestinationId(), this.idBill, 
                        RATE_DEFAULT, packge.isPriorized(), packge.getWeight(), packge.getGlobalFare(), 
                        packge.getPriorizationFare(), packge.getWeightFare(), packge.getPrice(), 
                        packge.isAvailability(), date); 
                storage.addPackageToQueue(packge.getPackageId(), date, packge.isPriorized());
            }
        } catch(Exception e) {
            
        }
    }
    public void generateIdBill() {
        this.idBill = billManager.generateCode();
    }
    
    public void getRate() {
        this.rates = manager.getRate(RATE_QUERY);
        this.rate = rates.get(0);
        this.globalFare = rate.getGlobalFare();
        this.weightFare = rate.getWeightFare();
        this.priorizationFare = rate.getPriorizationFare();
    }
    
    public double getDestinationFee() {
        double destinationFare;
        Destination destination;
        destination = destinationManager.getDestinationInList(destinationComboBox.getModel().getSelectedItem().toString());
        destinationFare = destination.getFee();
        return destinationFare;
    }

    public void setComboModel() {
        this.destinations = destinationManager.getElements(DESTINATION_QUERY);
        Vector destinationId = new Vector();
        Destination destination;
        for (int i = 0; i < this.destinations.size(); i++) {
            destination = this.destinations.get(i);            
            destinationId.add(destination.getDestinationId());
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(destinationId);
        destinationComboBox.setModel(model);
    }

    public void refreshObservableList(List<Package> list) {
        this.observablePackages.clear();
        this.observablePackages.addAll(list);
    }
    
    public ObservableList<Package> getObservablePackages() {
        return observablePackages;
    }

    public void setObservablePackages(ObservableList<Package> observablePackages) {
        this.observablePackages = observablePackages;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel addPackagePanel;
    private javax.swing.JPanel creatStuffPanel;
    private javax.swing.JTabbedPane createUserPanel;
    private javax.swing.JFormattedTextField dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JComboBox<String> destinationComboBox;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JButton facturarButton;
    private javax.swing.JLabel formatLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox priorizationField;
    private javax.swing.JLabel priorizationLabel;
    private javax.swing.JButton retiroButton;
    private javax.swing.JButton searchingButton;
    private javax.swing.JComboBox<String> searchingComboBox;
    private javax.swing.JTextField searchingField;
    private javax.swing.JLabel searchingText;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JSpinner weightSpinner;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
