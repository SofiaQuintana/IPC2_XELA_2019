/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packagedelivery.FrontEnd.Operating;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import packagedelivery.DBmanagers.CheckpointDBManager;
import packagedelivery.DBmanagers.DBManager;
import packagedelivery.DBmanagers.RegisterDBManager;
import packagedelivery.DummyClasses.Checkpoint;
import packagedelivery.DummyClasses.Register;
import packagedelivery.DummyClasses.User;

/**
 *
 * @author zofia
 */
public class RegisterDialog extends javax.swing.JDialog {
    private Connection connection;
    private User user;
    private List<Checkpoint> checkpoints;
    private List<Register> registers;
    private CheckpointDBManager checkpointManager;
    private RegisterDBManager register;
    private DBManager manager;
    private static final String SELECT_CHECKPOINT_QUERY = "SELECT * FROM Checkpoint WHERE User_name = ";
    /**
     * Creates new form RegisterDialog
     */
    public RegisterDialog(boolean modal, Connection connection, User user) {
        checkpoints = new ArrayList<>();
        registers = new ArrayList<>();
        initComponents();
        this.connection = connection;
        this.user = user;
        checkpointManager = new CheckpointDBManager(connection);
        register = new RegisterDBManager(connection);
        setComboBoxesModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        packageField = new javax.swing.JTextField();
        routeComboBox = new javax.swing.JComboBox<>();
        routeLabel = new javax.swing.JLabel();
        feeLabel = new javax.swing.JLabel();
        hourField = new javax.swing.JTextField();
        updateCheckpointButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        idLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        idLabel.setForeground(new java.awt.Color(0, 204, 102));
        idLabel.setText("Paquete:");

        routeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        routeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        routeLabel.setForeground(new java.awt.Color(0, 204, 102));
        routeLabel.setText("Punto de control:");

        feeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        feeLabel.setForeground(new java.awt.Color(0, 204, 102));
        feeLabel.setText("Horas:");

        updateCheckpointButton.setBackground(new java.awt.Color(0, 153, 102));
        updateCheckpointButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        updateCheckpointButton.setForeground(new java.awt.Color(255, 255, 255));
        updateCheckpointButton.setText("Actualizar");
        updateCheckpointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCheckpointButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(feeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hourField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(86, Short.MAX_VALUE)
                        .addComponent(routeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(routeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updateCheckpointButton)
                            .addComponent(packageField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(129, 129, 129))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(85, 85, 85)
                    .addComponent(idLabel)
                    .addContainerGap(415, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(packageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(routeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(routeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feeLabel)
                    .addComponent(hourField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateCheckpointButton)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(idLabel)
                    .addContainerGap(169, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateCheckpointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCheckpointButtonActionPerformed
        // TODO add your handling code here:
        if(packageField.getText().isEmpty() || hourField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese todos los campos...", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String query = "SELECT * FROM Register WHERE Package_Id = '" + packageField.getText() + 
                        "' ORDER BY Date ASC;";
                this.registers = register.getElements(query);
                Register register = this.registers.get(0);
//                String temporalQuery = "UPDATE Register SET Hours = " + Integer.valueOf(hourField.getText()) + "WHERE"
//                manager.updateElement(getCheckpointValues(generalRate));
                JOptionPane.showMessageDialog(this, "Punto de control actualizado...", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_updateCheckpointButtonActionPerformed

    public void setComboBoxesModel() {
        Vector routeVector = new Vector();
        String query = SELECT_CHECKPOINT_QUERY + "'" + this.user.getUsername() + "';";
        this.checkpoints = checkpointManager.getElements(query);
        Checkpoint checkpoint;
        for (int i = 0; i < checkpoints.size(); i++) {
            checkpoint = checkpoints.get(i);
            routeVector.add(checkpoint.getRouteId());
        }
        
        DefaultComboBoxModel routeModel = new DefaultComboBoxModel(routeVector);
        
        this.routeComboBox.setModel(routeModel);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel feeLabel;
    private javax.swing.JTextField hourField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField packageField;
    private javax.swing.JComboBox<String> routeComboBox;
    private javax.swing.JLabel routeLabel;
    private javax.swing.JButton updateCheckpointButton;
    // End of variables declaration//GEN-END:variables
}
