/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packagedelivery.FrontEnd.Management;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import packagedelivery.DBmanagers.DBManager;
import packagedelivery.DBmanagers.DestinationDBManager;
import packagedelivery.DBmanagers.RouteDBManager;
import packagedelivery.DBmanagers.UserDBManager;
import packagedelivery.DummyClasses.Checkpoint;
import packagedelivery.DummyClasses.Destination;
import packagedelivery.DummyClasses.Rate;
import packagedelivery.DummyClasses.Route;
import packagedelivery.DummyClasses.User;

/**
 *
 * @author zofia
 */
public class UpdateDialog extends javax.swing.JDialog {
    private Connection connection;
    private User user;
    private Destination destination;
    private List<Route> routes;
    private List<Rate> rate;
    private List<User> users;
    private Checkpoint checkpoint;
    private DBManager manager;
    private RouteDBManager routeManager;
    private UserDBManager userManager;
    private static final String UPDATE_USER_QUERY = "UPDATE User SET ";
    private static final String UPDATE_DESTINATION_QUERY = "UPDATE Destination SET ";
    private static final String UPDATE_CHECKPOINT_QUERY = "UPDATE Checkpoint SET ";
    private static final String ROUTES_QUERY = "SELECT * FROM Route WHERE Availability = 1 AND Disabled = 0;";
    private static final String USER_QUERY = "SELECT * FROM User WHERE Role = 'Operador' AND Availability = 1";
    private static final String RATE_QUERY = "SELECT * FROM Rate;";
    /**
     * Creates new form updateDialog
     */
    public UpdateDialog(boolean modal, Connection connection, User user, 
            Destination destination, Checkpoint checkpoint) {
        routes = new ArrayList<>();
        users = new ArrayList<>();
        initComponents();
        this.connection = connection;
        this.user = user;
        this.destination = destination;
        this.checkpoint = checkpoint;
        manager = new DBManager(connection);
        routeManager = new RouteDBManager(connection);
        userManager = new UserDBManager(connection);
        this.setModal(modal);
        setEnabledStuff();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        updatePanel = new javax.swing.JPanel();
        userField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        roleText = new javax.swing.JLabel();
        nameText = new javax.swing.JLabel();
        roleCombo = new javax.swing.JComboBox<>();
        passwordText = new javax.swing.JLabel();
        lastNameText = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        userText = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        creatStuffPanel = new javax.swing.JPanel();
        destinationField = new javax.swing.JTextField();
        feeField = new javax.swing.JTextField();
        nameText1 = new javax.swing.JLabel();
        updateDestinationButton = new javax.swing.JButton();
        userText1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        creatStuffPanel1 = new javax.swing.JPanel();
        idField = new javax.swing.JTextField();
        globalFeeLabel = new javax.swing.JLabel();
        routeLabel = new javax.swing.JLabel();
        operatorComboBox = new javax.swing.JComboBox<>();
        sizeLabel = new javax.swing.JLabel();
        operatorLabel = new javax.swing.JLabel();
        updateCheckpointButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        routeComboBox = new javax.swing.JComboBox<>();
        sizeSpinner = new javax.swing.JSpinner();
        globalFeeCheckbox = new javax.swing.JCheckBox();
        feeLabel = new javax.swing.JLabel();
        feeIndependentField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        updatePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        roleText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        roleText.setForeground(new java.awt.Color(0, 51, 102));
        roleText.setText("Rol:");

        nameText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        nameText.setForeground(new java.awt.Color(0, 51, 102));
        nameText.setText("Nombre:");

        roleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Operador", "Recepcionista" }));

        passwordText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        passwordText.setForeground(new java.awt.Color(0, 51, 102));
        passwordText.setText("Contrase√±a:");

        lastNameText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        lastNameText.setForeground(new java.awt.Color(0, 51, 102));
        lastNameText.setText("Apellido:");

        updateButton.setBackground(new java.awt.Color(153, 153, 153));
        updateButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(102, 102, 102));
        updateButton.setText("Actualizar");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        userText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        userText.setForeground(new java.awt.Color(0, 51, 102));
        userText.setText("Usuario:");

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordText)
                            .addComponent(lastNameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roleText, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userField)
                            .addComponent(nameField)
                            .addComponent(lastNameField)
                            .addComponent(roleCombo, 0, 214, Short.MAX_VALUE)
                            .addComponent(passwordField))))
                .addContainerGap())
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userText)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameText)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordText)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleText)
                    .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Usuarios", updatePanel);

        creatStuffPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        nameText1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        nameText1.setForeground(new java.awt.Color(0, 51, 102));
        nameText1.setText("Cuota de destino:");

        updateDestinationButton.setBackground(new java.awt.Color(153, 153, 153));
        updateDestinationButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        updateDestinationButton.setForeground(new java.awt.Color(102, 102, 102));
        updateDestinationButton.setText("Actualizar");
        updateDestinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDestinationButtonActionPerformed(evt);
            }
        });

        userText1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        userText1.setForeground(new java.awt.Color(0, 51, 102));
        userText1.setText("Destino:");

        jLabel1.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ej: Mexico, Quetzaltenango, etc.");

        jLabel3.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        jLabel3.setText("Ej: 55, 100.5, etc.");

        javax.swing.GroupLayout creatStuffPanelLayout = new javax.swing.GroupLayout(creatStuffPanel);
        creatStuffPanel.setLayout(creatStuffPanelLayout);
        creatStuffPanelLayout.setHorizontalGroup(
            creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creatStuffPanelLayout.createSequentialGroup()
                        .addComponent(userText1)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(creatStuffPanelLayout.createSequentialGroup()
                        .addComponent(nameText1)
                        .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3))
                            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(feeField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateDestinationButton))))
                        .addGap(0, 60, Short.MAX_VALUE))))
        );
        creatStuffPanelLayout.setVerticalGroup(
            creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userText1)
                    .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText1)
                    .addComponent(feeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jLabel3)
                .addGap(16, 16, 16)
                .addComponent(updateDestinationButton)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Destinos", creatStuffPanel);

        creatStuffPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        globalFeeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        globalFeeLabel.setForeground(new java.awt.Color(0, 51, 102));
        globalFeeLabel.setText("Tarifa Global:");

        routeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        routeLabel.setForeground(new java.awt.Color(0, 51, 102));
        routeLabel.setText("Ruta:");

        sizeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        sizeLabel.setForeground(new java.awt.Color(0, 51, 102));
        sizeLabel.setText("Tama√±o:");

        operatorLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        operatorLabel.setForeground(new java.awt.Color(0, 51, 102));
        operatorLabel.setText("Operador:");

        updateCheckpointButton.setBackground(new java.awt.Color(153, 153, 153));
        updateCheckpointButton.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 14)); // NOI18N
        updateCheckpointButton.setForeground(new java.awt.Color(102, 102, 102));
        updateCheckpointButton.setText("Actualizar");
        updateCheckpointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCheckpointButtonActionPerformed(evt);
            }
        });

        idLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        idLabel.setForeground(new java.awt.Color(0, 51, 102));
        idLabel.setText("ID:");

        routeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        sizeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));

        globalFeeCheckbox.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        globalFeeCheckbox.setForeground(new java.awt.Color(102, 102, 102));
        globalFeeCheckbox.setText("Seleccione para asignar tarifa global");
        globalFeeCheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                globalFeeCheckboxMouseClicked(evt);
            }
        });

        feeLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 15)); // NOI18N
        feeLabel.setForeground(new java.awt.Color(0, 51, 102));
        feeLabel.setText("Tarifa Independiente:");

        javax.swing.GroupLayout creatStuffPanel1Layout = new javax.swing.GroupLayout(creatStuffPanel1);
        creatStuffPanel1.setLayout(creatStuffPanel1Layout);
        creatStuffPanel1Layout.setHorizontalGroup(
            creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(operatorLabel)
                    .addComponent(routeLabel)
                    .addComponent(idLabel)
                    .addComponent(sizeLabel)
                    .addComponent(globalFeeLabel)
                    .addComponent(feeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(idField)
                        .addComponent(operatorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(routeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(globalFeeCheckbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(feeIndependentField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creatStuffPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(updateCheckpointButton)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        creatStuffPanel1Layout.setVerticalGroup(
            creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatStuffPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(routeLabel)
                    .addComponent(routeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(operatorLabel)
                    .addComponent(operatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sizeLabel)
                    .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(globalFeeCheckbox)
                    .addComponent(globalFeeLabel))
                .addGap(18, 18, 18)
                .addGroup(creatStuffPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feeLabel)
                    .addComponent(feeIndependentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateCheckpointButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Puntos de control", creatStuffPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String query = getUserValues();       
        manager.updateElement(query);
        JOptionPane.showMessageDialog(this, "Usuario actualizado...", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void updateDestinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDestinationButtonActionPerformed
        // 
        manager.updateElement(getDestinationValues());
        JOptionPane.showMessageDialog(this, "Destino actualizado...", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
    }//GEN-LAST:event_updateDestinationButtonActionPerformed

    private void updateCheckpointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCheckpointButtonActionPerformed
        // TODO add your handling code here:
        if(idField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese todos los campos...", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                this.rate = manager.getRate(RATE_QUERY);
                Rate generalRate = this.rate.get(0);
                manager.updateElement(getCheckpointValues(generalRate));
                JOptionPane.showMessageDialog(this, "Punto de control actualizado...", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_updateCheckpointButtonActionPerformed

    private void globalFeeCheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_globalFeeCheckboxMouseClicked
        // TODO add your handling code here:
        if(globalFeeCheckbox.isSelected()) {
            feeField.disable();
            feeField.setText("");
            JOptionPane.showMessageDialog(this, "Tarifa asignada...", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            feeField.enable();
        }
    }//GEN-LAST:event_globalFeeCheckboxMouseClicked

    public void setEnabledStuff() {
        if(this.user != null) {
            disableDestinationStuff();
            disableCheckpointStuff();
            setUserValues();
        } else if(this.destination != null) {
            setDestinationValues();
            disableCheckpointStuff();
            disableUserStuff();
        } else if(this.checkpoint != null) {
            disableUserStuff();
            disableDestinationStuff();
            setComboBoxesModel();
            setCheckpointValues();
        }
    }
    
    public void disableCheckpointStuff() {
        idField.disable();
        routeComboBox.disable();
        operatorComboBox.disable();
        sizeSpinner.disable();
        globalFeeCheckbox.disable();
        feeField.disable();
        updateCheckpointButton.hide();
    }
    
    public void disableDestinationStuff() {
        destinationField.disable();
        feeField.disable();
        updateDestinationButton.hide();
    }
    
    public void disableUserStuff() {
        userField.disable();
        nameField.disable();
        lastNameField.disable();
        passwordField.disable();
        roleCombo.disable();
        updateButton.hide();
    }
    
    public void setCheckpointValues() {
        idField.setText(this.checkpoint.getCheckpointId());
        idField.setEnabled(false);
        routeComboBox.getModel().setSelectedItem(this.checkpoint.getRouteId());
        operatorComboBox.getModel().setSelectedItem(this.checkpoint.getOperatorName());
        sizeSpinner.getModel().setValue(this.checkpoint.getQueueSize());
        if(this.checkpoint.getGlobalFare() == 0) {
            feeField.setText(String.valueOf(this.checkpoint.getSpecialFare()));
        } else {
            globalFeeCheckbox.setSelected(true);
        }
    }
    
    public void setDestinationValues() {
        this.destinationField.setText(this.destination.getDestinationId());
        this.feeField.setText(String.valueOf(this.destination.getFee()));
    }
    
    public void setUserValues() {
        this.userField.setText(this.user.getUsername());
        this.userField.disable();
        this.nameField.setText(this.user.getName());
        this.lastNameField.setText(this.user.getLastName());
        this.passwordField.setText(this.user.getPassword());
        this.roleCombo.getModel().setSelectedItem(this.user.getRole());
    }
    
    public String getDestinationValues() {
        String destinationId = this.destination.getDestinationId();
        String newDestinationId = destinationField.getText();
        double fee = Double.valueOf(feeField.getText());
        String query = UPDATE_DESTINATION_QUERY + "IdDestination = '" + 
                newDestinationId + "', Fee = " + fee +" WHERE IdDestination = '" + destinationId + "';"; 
        return query;
    }
    
    public String getUserValues() {
        String username = this.user.getUsername();
        String name = nameField.getText();
        String lastName = lastNameField.getText();
        String password = passwordField.getText();
        String role = roleCombo.getModel().getSelectedItem().toString();
        String query = UPDATE_USER_QUERY + "Name = '" + name + "', LastName = '" + lastName 
               + "', Role = '" + role + "', Password = '" + password + "' WHERE Username = '" + username + "';";
        return query;
}
    
    public String getCheckpointValues(Rate generalRate) {
        String query = UPDATE_CHECKPOINT_QUERY;
        String id = this.checkpoint.getCheckpointId();
        String routeId = routeComboBox.getModel().getSelectedItem().toString();
        String operator = operatorComboBox.getModel().getSelectedItem().toString();
        int size = (int) sizeSpinner.getModel().getValue();
        if(globalFeeCheckbox.isSelected()) {
            double globalFee = generalRate.getGlobalFare();
            query += "Route_Id = '" + routeId  + "', User_name = '" + operator + "', QueueSize = " + size 
                    + ", GlobalFare = " + globalFee + ", SpecialFare = 0 WHERE IdCheckpoint = '" + id + "';";
            return query;
        } else {
            double fee = Double.parseDouble(feeIndependentField.getText());
            query +=  "Route_Id = '" + routeId  + "', User_name = '" + operator + "', QueueSize = " + size 
                    + ", GlobalFare = 0, SpecialFare = " + fee + "WHERE IdCheckpoint = '" + id + "';";
            return query;
        }
    }

        public void setComboBoxesModel() {
        Vector userVector = new Vector();
        Vector routeVector = new Vector();
        this.users = userManager.getUsers(USER_QUERY);
        this.routes = routeManager.getRoutes(ROUTES_QUERY);
        User user;
        Route route;
        for (int i = 0; i < users.size(); i++) {
            user = users.get(i);
            userVector.add(user.getUsername());
        }
        
        for (int i = 0; i < routes.size(); i++) {
            route = routes.get(i);
            routeVector.add(route.getRouteId());
        }
        
        DefaultComboBoxModel userModel = new DefaultComboBoxModel(userVector);
        DefaultComboBoxModel routeModel = new DefaultComboBoxModel(routeVector);
        
        this.operatorComboBox.setModel(userModel);
        this.routeComboBox.setModel(routeModel);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel creatStuffPanel;
    private javax.swing.JPanel creatStuffPanel1;
    private javax.swing.JTextField destinationField;
    private javax.swing.JTextField feeField;
    private javax.swing.JTextField feeIndependentField;
    private javax.swing.JLabel feeLabel;
    private javax.swing.JCheckBox globalFeeCheckbox;
    private javax.swing.JLabel globalFeeLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameText;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameText;
    private javax.swing.JLabel nameText1;
    private javax.swing.JComboBox<String> operatorComboBox;
    private javax.swing.JLabel operatorLabel;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordText;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JLabel roleText;
    private javax.swing.JComboBox<String> routeComboBox;
    private javax.swing.JLabel routeLabel;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JSpinner sizeSpinner;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateCheckpointButton;
    private javax.swing.JButton updateDestinationButton;
    private javax.swing.JPanel updatePanel;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel userText;
    private javax.swing.JLabel userText1;
    // End of variables declaration//GEN-END:variables
}
